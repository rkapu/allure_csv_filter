#!/usr/bin/env ruby

require "csv"

FAIL_STATUSES = ["failed", "broken"].freeze

def error(message)
  abort("ERROR: #{message}")
end

def check_filepath(filepath)
  if filepath.nil?
    error("First argument should be a filepath to csv allure report file")
  end

  unless File.exist?(filepath)
    error("File does not exist")
  end

  unless File.extname(filepath) == ".csv"
    error("File is not a csv file")
  end
end

filepath = ARGV[0]
check_filepath(filepath)

failed_tests_collection = []
all_count = 0

CSV.foreach(filepath, headers: true) do |row|
  all_count += 1

  next unless FAIL_STATUSES.include?(row["Status"])

  failed_tests_collection << row
end

unique_failed_tests_locations = failed_tests_collection.map do |row|
  test_file_path = row["Description"].slice(row["Description"].index("features/")..-1)
  test_file_path.split(":")[0]
end
unique_failed_tests_locations.uniq!

puts "all count: #{all_count}"
puts "failed count: #{failed_tests_collection.count}\n"
puts "failed unique count: #{unique_failed_tests_locations.count}\n"
puts # newline
puts unique_failed_tests_locations
